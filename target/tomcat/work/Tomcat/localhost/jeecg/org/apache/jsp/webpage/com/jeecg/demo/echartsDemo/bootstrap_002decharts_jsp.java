/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-06-10 06:26:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.webpage.com.jeecg.demo.echartsDemo;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class bootstrap_002decharts_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/tld/easyui.tld", Long.valueOf(1558695108000L));
    _jspx_dependants.put("/context/mytags.jsp", Long.valueOf(1558695108000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
 
String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path;

      out.write('\n');
      //  c:set
      org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /context/mytags.jsp(9,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("webRoot");
      // /context/mytags.jsp(9,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(basePath);
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
        return;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width\" />\n");
      out.write("<meta name=\"renderer\" content=\"webkit\">\n");
      out.write("<title>Bootstrap-Eaharts-DEMO</title>\n");
      out.write("<link href=\"plug-in/bootstrap3.3.5/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div class=\"container-fluid\">\n");
      out.write("\t<div class=\"row\">\n");
      out.write("\t\t<div class=\"col-md-8\">\n");
      out.write("\t\t\t<div id=\"main1\" style=\"height:400px;\"></div>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"col-md-4\">\n");
      out.write("\t\t\t<div id=\"main2\" style=\"height:400px;\"></div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<div class=\"row\">\n");
      out.write("\t\t<div class=\"col-md-6\">\n");
      out.write("\t\t\t<div id=\"main3\" style=\"height:400px;\"></div>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"col-md-6\">\n");
      out.write("\t\t\t<div id=\"main4\" style=\"height:400px;\"></div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<div class=\"row\">\n");
      out.write("\t\t<div class=\"col-md-4\">\n");
      out.write("\t\t\t<div id=\"main5\" style=\"height:400px;\"></div>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"col-md-4\">\n");
      out.write("\t\t\t<div id=\"main6\" style=\"height:400px;\"></div>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"col-md-4\">\n");
      out.write("\t\t\t<div id=\"main7\" style=\"height:400px;\"></div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<div class=\"row\">\n");
      out.write("\t\t<div class=\"col-md-2\">\n");
      out.write("\t\t\t<div id=\"main8\" style=\"height:400px;\"></div>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"col-md-6\">\n");
      out.write("\t\t\t<div id=\"main9\" style=\"height:400px;\"></div>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"col-md-4\">\n");
      out.write("\t\t\t<div id=\"main10\" style=\"height:400px;\"></div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<div class=\"row\">\n");
      out.write("\t\t<div class=\"col-md-12\">\n");
      out.write("\t\t\t<div id=\"main11\" style=\"height:400px;\"></div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<button style=\"float:right;\" type=\"button\" class=\"btn btn-default\" onclick=\"clickPrint()\">打印</button>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("<script type=\"text/javascript\" src=\"plug-in/jquery/jquery-1.9.1.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"plug-in/bootstrap3.3.5/js/bootstrap.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"plug-in/printthis/printThis.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"plug-in/echart/echarts.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\tvar myChart1 = echarts.init(document.getElementById('main1'));\n");
      out.write("\tvar myChart2 = echarts.init(document.getElementById('main2'));\n");
      out.write("\tvar myChart3 = echarts.init(document.getElementById('main3'));\n");
      out.write("\tvar myChart4 = echarts.init(document.getElementById('main4'));\n");
      out.write("\tvar myChart5 = echarts.init(document.getElementById('main5'));\n");
      out.write("\tvar myChart6 = echarts.init(document.getElementById('main6'));\n");
      out.write("\tvar myChart7 = echarts.init(document.getElementById('main7'));\n");
      out.write("\tvar myChart8 = echarts.init(document.getElementById('main8'));\n");
      out.write("\tvar myChart9 = echarts.init(document.getElementById('main9'));\n");
      out.write("\tvar myChart10 = echarts.init(document.getElementById('main10'));\n");
      out.write("\tvar myChart11= echarts.init(document.getElementById('main11'));\n");
      out.write("\t// 指定图表的配置项和数据\n");
      out.write("\tvar option = {\n");
      out.write("\t    title: {\n");
      out.write("\t        text: '基础雷达图'\n");
      out.write("\t    },\n");
      out.write("\t    tooltip: {},\n");
      out.write("\t    legend: {\n");
      out.write("\t        data: ['预算分配（Allocated Budget）', '实际开销（Actual Spending）']\n");
      out.write("\t    },\n");
      out.write("\t    radar: {\n");
      out.write("\t        // shape: 'circle',\n");
      out.write("\t        name: {\n");
      out.write("\t            textStyle: {\n");
      out.write("\t                color: '#fff',\n");
      out.write("\t                backgroundColor: '#999',\n");
      out.write("\t                borderRadius: 3,\n");
      out.write("\t                padding: [3, 5]\n");
      out.write("\t           }\n");
      out.write("\t        },\n");
      out.write("\t        indicator: [\n");
      out.write("\t           { name: '销售（sales）', max: 6500},\n");
      out.write("\t           { name: '管理（Administration）', max: 16000},\n");
      out.write("\t           { name: '信息技术（Information Techology）', max: 30000},\n");
      out.write("\t           { name: '客服（Customer Support）', max: 38000},\n");
      out.write("\t           { name: '研发（Development）', max: 52000},\n");
      out.write("\t           { name: '市场（Marketing）', max: 25000}\n");
      out.write("\t        ]\n");
      out.write("\t    },\n");
      out.write("\t    series: [{\n");
      out.write("\t        name: '预算 vs 开销（Budget vs spending）',\n");
      out.write("\t        type: 'radar',\n");
      out.write("\t        // areaStyle: {normal: {}},\n");
      out.write("\t        data : [\n");
      out.write("\t            {\n");
      out.write("\t                value : [4300, 10000, 28000, 35000, 50000, 19000],\n");
      out.write("\t                name : '预算分配（Allocated Budget）'\n");
      out.write("\t            },\n");
      out.write("\t             {\n");
      out.write("\t                value : [5000, 14000, 28000, 31000, 42000, 21000],\n");
      out.write("\t                name : '实际开销（Actual Spending）'\n");
      out.write("\t            }\n");
      out.write("\t        ]\n");
      out.write("\t    }]\n");
      out.write("\t};\n");
      out.write("\t// 使用刚指定的配置项和数据显示图表。\n");
      out.write("\tmyChart1.setOption(option);\n");
      out.write("\toption = {\n");
      out.write("\t    title : {\n");
      out.write("\t        text: '某站点用户访问来源',\n");
      out.write("\t        subtext: '纯属虚构',\n");
      out.write("\t        x:'center'\n");
      out.write("\t    },\n");
      out.write("\t    tooltip : {\n");
      out.write("\t        trigger: 'item',\n");
      out.write("\t        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n");
      out.write("\t    },\n");
      out.write("\t    legend: {\n");
      out.write("\t        orient: 'vertical',\n");
      out.write("\t        left: 'left',\n");
      out.write("\t        data: ['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\n");
      out.write("\t    },\n");
      out.write("\t    series : [\n");
      out.write("\t        {\n");
      out.write("\t            name: '访问来源',\n");
      out.write("\t            type: 'pie',\n");
      out.write("\t            radius : '55%',\n");
      out.write("\t            center: ['50%', '60%'],\n");
      out.write("\t            data:[\n");
      out.write("\t                {value:335, name:'直接访问'},\n");
      out.write("\t                {value:310, name:'邮件营销'},\n");
      out.write("\t                {value:234, name:'联盟广告'},\n");
      out.write("\t                {value:135, name:'视频广告'},\n");
      out.write("\t                {value:1548, name:'搜索引擎'}\n");
      out.write("\t            ],\n");
      out.write("\t            itemStyle: {\n");
      out.write("\t                emphasis: {\n");
      out.write("\t                    shadowBlur: 10,\n");
      out.write("\t                    shadowOffsetX: 0,\n");
      out.write("\t                    shadowColor: 'rgba(0, 0, 0, 0.5)'\n");
      out.write("\t                }\n");
      out.write("\t            }\n");
      out.write("\t        }\n");
      out.write("\t    ]\n");
      out.write("\t};\n");
      out.write("\tmyChart2.setOption(option);\n");
      out.write("\toption = {\n");
      out.write("\t    title: {\n");
      out.write("\t        text: 'ECharts 入门示例'\n");
      out.write("\t    },\n");
      out.write("\t    tooltip: {},\n");
      out.write("\t    legend: {\n");
      out.write("\t        data:['销量']\n");
      out.write("\t    },\n");
      out.write("\t    xAxis: {\n");
      out.write("\t        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\n");
      out.write("\t    },\n");
      out.write("\t    yAxis: {},\n");
      out.write("\t    series: [{\n");
      out.write("\t        name: '销量',\n");
      out.write("\t        type: 'bar',\n");
      out.write("\t        data: [5, 20, 36, 10, 10, 20]\n");
      out.write("\t    }]\n");
      out.write("\t};\n");
      out.write("\tmyChart3.setOption(option);\n");
      out.write("\toption = {\n");
      out.write("\t    title: {\n");
      out.write("\t        text: '堆叠区域图'\n");
      out.write("\t    },\n");
      out.write("\t    tooltip : {\n");
      out.write("\t        trigger: 'axis',\n");
      out.write("\t        axisPointer: {\n");
      out.write("\t            type: 'cross',\n");
      out.write("\t            label: {\n");
      out.write("\t                backgroundColor: '#6a7985'\n");
      out.write("\t            }\n");
      out.write("\t        }\n");
      out.write("\t    },\n");
      out.write("\t    legend: {\n");
      out.write("\t        data:['联盟广告','视频广告','直接访问','搜索引擎']\n");
      out.write("\t    },\n");
      out.write("\t    toolbox: {\n");
      out.write("\t        feature: {\n");
      out.write("\t            saveAsImage: {}\n");
      out.write("\t        }\n");
      out.write("\t    },\n");
      out.write("\t    grid: {\n");
      out.write("\t        left: '3%',\n");
      out.write("\t        right: '4%',\n");
      out.write("\t        bottom: '3%',\n");
      out.write("\t        containLabel: true\n");
      out.write("\t    },\n");
      out.write("\t    xAxis : [\n");
      out.write("\t        {\n");
      out.write("\t            type : 'category',\n");
      out.write("\t            boundaryGap : false,\n");
      out.write("\t            data : ['周一','周二','周三','周四','周五','周六','周日']\n");
      out.write("\t        }\n");
      out.write("\t    ],\n");
      out.write("\t    yAxis : [\n");
      out.write("\t        {\n");
      out.write("\t            type : 'value'\n");
      out.write("\t        }\n");
      out.write("\t    ],\n");
      out.write("\t    series : [\n");
      out.write("\t        {\n");
      out.write("\t            name:'联盟广告',\n");
      out.write("\t            type:'line',\n");
      out.write("\t            stack: '总量',\n");
      out.write("\t            areaStyle: {normal: {}},\n");
      out.write("\t            data:[220, 182, 191, 234, 290, 330, 310]\n");
      out.write("\t        },\n");
      out.write("\t        {\n");
      out.write("\t            name:'视频广告',\n");
      out.write("\t            type:'line',\n");
      out.write("\t            stack: '总量',\n");
      out.write("\t            areaStyle: {normal: {}},\n");
      out.write("\t            data:[150, 232, 201, 154, 190, 330, 410]\n");
      out.write("\t        },\n");
      out.write("\t        {\n");
      out.write("\t            name:'直接访问',\n");
      out.write("\t            type:'line',\n");
      out.write("\t            stack: '总量',\n");
      out.write("\t            areaStyle: {normal: {}},\n");
      out.write("\t            data:[320, 332, 301, 334, 390, 330, 320]\n");
      out.write("\t        },\n");
      out.write("\t        {\n");
      out.write("\t            name:'搜索引擎',\n");
      out.write("\t            type:'line',\n");
      out.write("\t            stack: '总量',\n");
      out.write("\t            label: {\n");
      out.write("\t                normal: {\n");
      out.write("\t                    show: true,\n");
      out.write("\t                    position: 'top'\n");
      out.write("\t                }\n");
      out.write("\t            },\n");
      out.write("\t            areaStyle: {normal: {}},\n");
      out.write("\t            data:[820, 932, 901, 934, 1290, 1330, 1320]\n");
      out.write("\t        }\n");
      out.write("\t    ]\n");
      out.write("\t};\n");
      out.write("\tmyChart4.setOption(option);\n");
      out.write("\tvar colors = ['#5793f3', '#d14a61', '#675bba'];\n");
      out.write("\toption = {\n");
      out.write("\t    color: colors,\n");
      out.write("\n");
      out.write("\t    tooltip: {\n");
      out.write("\t        trigger: 'none',\n");
      out.write("\t        axisPointer: {\n");
      out.write("\t            type: 'cross'\n");
      out.write("\t        }\n");
      out.write("\t    },\n");
      out.write("\t    legend: {\n");
      out.write("\t        data:['2015 降水量', '2016 降水量']\n");
      out.write("\t    },\n");
      out.write("\t    grid: {\n");
      out.write("\t        top: 70,\n");
      out.write("\t        bottom: 50\n");
      out.write("\t    },\n");
      out.write("\t    xAxis: [\n");
      out.write("\t        {\n");
      out.write("\t            type: 'category',\n");
      out.write("\t            axisTick: {\n");
      out.write("\t                alignWithLabel: true\n");
      out.write("\t            },\n");
      out.write("\t            axisLine: {\n");
      out.write("\t                onZero: false,\n");
      out.write("\t                lineStyle: {\n");
      out.write("\t                    color: colors[1]\n");
      out.write("\t                }\n");
      out.write("\t            },\n");
      out.write("\t            axisPointer: {\n");
      out.write("\t                label: {\n");
      out.write("\t                    formatter: function (params) {\n");
      out.write("\t                        return '降水量  ' + params.value\n");
      out.write("\t                            + (params.seriesData.length ? '：' + params.seriesData[0].data : '');\n");
      out.write("\t                    }\n");
      out.write("\t                }\n");
      out.write("\t            },\n");
      out.write("\t            data: [\"2016-1\", \"2016-2\", \"2016-3\", \"2016-4\", \"2016-5\", \"2016-6\", \"2016-7\", \"2016-8\", \"2016-9\", \"2016-10\", \"2016-11\", \"2016-12\"]\n");
      out.write("\t        },\n");
      out.write("\t        {\n");
      out.write("\t            type: 'category',\n");
      out.write("\t            axisTick: {\n");
      out.write("\t                alignWithLabel: true\n");
      out.write("\t            },\n");
      out.write("\t            axisLine: {\n");
      out.write("\t                onZero: false,\n");
      out.write("\t                lineStyle: {\n");
      out.write("\t                    color: colors[0]\n");
      out.write("\t                }\n");
      out.write("\t            },\n");
      out.write("\t            axisPointer: {\n");
      out.write("\t                label: {\n");
      out.write("\t                    formatter: function (params) {\n");
      out.write("\t                        return '降水量  ' + params.value\n");
      out.write("\t                            + (params.seriesData.length ? '：' + params.seriesData[0].data : '');\n");
      out.write("\t                    }\n");
      out.write("\t                }\n");
      out.write("\t            },\n");
      out.write("\t            data: [\"2015-1\", \"2015-2\", \"2015-3\", \"2015-4\", \"2015-5\", \"2015-6\", \"2015-7\", \"2015-8\", \"2015-9\", \"2015-10\", \"2015-11\", \"2015-12\"]\n");
      out.write("\t        }\n");
      out.write("\t    ],\n");
      out.write("\t    yAxis: [\n");
      out.write("\t        {\n");
      out.write("\t            type: 'value'\n");
      out.write("\t        }\n");
      out.write("\t    ],\n");
      out.write("\t    series: [\n");
      out.write("\t        {\n");
      out.write("\t            name:'2015 降水量',\n");
      out.write("\t            type:'line',\n");
      out.write("\t            xAxisIndex: 1,\n");
      out.write("\t            smooth: true,\n");
      out.write("\t            data: [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3]\n");
      out.write("\t        },\n");
      out.write("\t        {\n");
      out.write("\t            name:'2016 降水量',\n");
      out.write("\t            type:'line',\n");
      out.write("\t            smooth: true,\n");
      out.write("\t            data: [3.9, 5.9, 11.1, 18.7, 48.3, 69.2, 231.6, 46.6, 55.4, 18.4, 10.3, 0.7]\n");
      out.write("\t        }\n");
      out.write("\t    ]\n");
      out.write("\t};\n");
      out.write("\tmyChart5.setOption(option);\n");
      out.write("\toption = {\n");
      out.write("\t    tooltip : {\n");
      out.write("\t        trigger: 'axis',\n");
      out.write("\t        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n");
      out.write("\t            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n");
      out.write("\t        }\n");
      out.write("\t    },\n");
      out.write("\t    legend: {\n");
      out.write("\t        data: ['直接访问', '邮件营销','联盟广告']\n");
      out.write("\t    },\n");
      out.write("\t    grid: {\n");
      out.write("\t        left: '3%',\n");
      out.write("\t        right: '4%',\n");
      out.write("\t        bottom: '3%',\n");
      out.write("\t        containLabel: true\n");
      out.write("\t    },\n");
      out.write("\t    xAxis:  {\n");
      out.write("\t        type: 'value'\n");
      out.write("\t    },\n");
      out.write("\t    yAxis: {\n");
      out.write("\t        type: 'category',\n");
      out.write("\t        data: ['周一','周二','周三','周四','周五','周六','周日']\n");
      out.write("\t    },\n");
      out.write("\t    series: [\n");
      out.write("\t        {\n");
      out.write("\t            name: '直接访问',\n");
      out.write("\t            type: 'bar',\n");
      out.write("\t            stack: '总量',\n");
      out.write("\t            label: {\n");
      out.write("\t                normal: {\n");
      out.write("\t                    show: true,\n");
      out.write("\t                    position: 'insideRight'\n");
      out.write("\t                }\n");
      out.write("\t            },\n");
      out.write("\t            data: [320, 302, 301, 334, 390, 330, 320]\n");
      out.write("\t        },\n");
      out.write("\t        {\n");
      out.write("\t            name: '邮件营销',\n");
      out.write("\t            type: 'bar',\n");
      out.write("\t            stack: '总量',\n");
      out.write("\t            label: {\n");
      out.write("\t                normal: {\n");
      out.write("\t                    show: true,\n");
      out.write("\t                    position: 'insideRight'\n");
      out.write("\t                }\n");
      out.write("\t            },\n");
      out.write("\t            data: [120, 132, 101, 134, 90, 230, 210]\n");
      out.write("\t        },\n");
      out.write("\t        {\n");
      out.write("\t            name: '联盟广告',\n");
      out.write("\t            type: 'bar',\n");
      out.write("\t            stack: '总量',\n");
      out.write("\t            label: {\n");
      out.write("\t                normal: {\n");
      out.write("\t                    show: true,\n");
      out.write("\t                    position: 'insideRight'\n");
      out.write("\t                }\n");
      out.write("\t            },\n");
      out.write("\t            data: [220, 182, 191, 234, 290, 330, 310]\n");
      out.write("\t        }\n");
      out.write("\t    ]\n");
      out.write("\t};\n");
      out.write("\tmyChart6.setOption(option);\n");
      out.write("\toption = {\n");
      out.write("\t    tooltip : {\n");
      out.write("\t        formatter: \"{a} <br/>{b} : {c}%\"\n");
      out.write("\t    },\n");
      out.write("\t    toolbox: {\n");
      out.write("\t        feature: {\n");
      out.write("\t            restore: {},\n");
      out.write("\t            saveAsImage: {}\n");
      out.write("\t        }\n");
      out.write("\t    },\n");
      out.write("\t    series: [\n");
      out.write("\t        {\n");
      out.write("\t            name: '业务指标',\n");
      out.write("\t            type: 'gauge',\n");
      out.write("\t            detail: {formatter:'{value}%'},\n");
      out.write("\t            data: [{value: 50, name: '完成率'}]\n");
      out.write("\t        }\n");
      out.write("\t    ]\n");
      out.write("\t};\n");
      out.write("\n");
      out.write("\tmyChart7.setOption(option);\n");
      out.write("\n");
      out.write("\toption = {\n");
      out.write("\t    tooltip: {\n");
      out.write("\t        trigger: 'item',\n");
      out.write("\t        formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n");
      out.write("\t    },\n");
      out.write("\t    legend: {\n");
      out.write("\t        orient: 'vertical',\n");
      out.write("\t        x: 'left',\n");
      out.write("\t        data:['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\n");
      out.write("\t    },\n");
      out.write("\t    series: [\n");
      out.write("\t        {\n");
      out.write("\t            name:'访问来源',\n");
      out.write("\t            type:'pie',\n");
      out.write("\t            radius: ['50%', '70%'],\n");
      out.write("\t            avoidLabelOverlap: false,\n");
      out.write("\t            label: {\n");
      out.write("\t                normal: {\n");
      out.write("\t                    show: false,\n");
      out.write("\t                    position: 'center'\n");
      out.write("\t                },\n");
      out.write("\t                emphasis: {\n");
      out.write("\t                    show: true,\n");
      out.write("\t                    textStyle: {\n");
      out.write("\t                        fontSize: '30',\n");
      out.write("\t                        fontWeight: 'bold'\n");
      out.write("\t                    }\n");
      out.write("\t                }\n");
      out.write("\t            },\n");
      out.write("\t            labelLine: {\n");
      out.write("\t                normal: {\n");
      out.write("\t                    show: false\n");
      out.write("\t                }\n");
      out.write("\t            },\n");
      out.write("\t            data:[\n");
      out.write("\t                {value:335, name:'直接访问'},\n");
      out.write("\t                {value:310, name:'邮件营销'},\n");
      out.write("\t                {value:234, name:'联盟广告'},\n");
      out.write("\t                {value:135, name:'视频广告'},\n");
      out.write("\t                {value:1548, name:'搜索引擎'}\n");
      out.write("\t            ]\n");
      out.write("\t        }\n");
      out.write("\t    ]\n");
      out.write("\t};\n");
      out.write("\n");
      out.write("\tmyChart8.setOption(option);\n");
      out.write("\tvar labelRight = {\n");
      out.write("\t    normal: {\n");
      out.write("\t        position: 'right'\n");
      out.write("\t    }\n");
      out.write("\t};\n");
      out.write("\toption = {\n");
      out.write("\t    title: {\n");
      out.write("\t        text: '交错正负轴标签',\n");
      out.write("\t        subtext: 'From ExcelHome',\n");
      out.write("\t        sublink: 'http://e.weibo.com/1341556070/AjwF2AgQm'\n");
      out.write("\t    },\n");
      out.write("\t    tooltip : {\n");
      out.write("\t        trigger: 'axis',\n");
      out.write("\t        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n");
      out.write("\t            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n");
      out.write("\t        }\n");
      out.write("\t    },\n");
      out.write("\t    grid: {\n");
      out.write("\t        top: 80,\n");
      out.write("\t        bottom: 30\n");
      out.write("\t    },\n");
      out.write("\t    xAxis: {\n");
      out.write("\t        type : 'value',\n");
      out.write("\t        position: 'top',\n");
      out.write("\t        splitLine: {lineStyle:{type:'dashed'}},\n");
      out.write("\t    },\n");
      out.write("\t    yAxis: {\n");
      out.write("\t        type : 'category',\n");
      out.write("\t        axisLine: {show: false},\n");
      out.write("\t        axisLabel: {show: false},\n");
      out.write("\t        axisTick: {show: false},\n");
      out.write("\t        splitLine: {show: false},\n");
      out.write("\t        data : ['ten', 'nine', 'eight', 'seven', 'six', 'five', 'four', 'three', 'two', 'one']\n");
      out.write("\t    },\n");
      out.write("\t    series : [\n");
      out.write("\t        {\n");
      out.write("\t            name:'生活费',\n");
      out.write("\t            type:'bar',\n");
      out.write("\t            stack: '总量',\n");
      out.write("\t            label: {\n");
      out.write("\t                normal: {\n");
      out.write("\t                    show: true,\n");
      out.write("\t                    formatter: '{b}'\n");
      out.write("\t                }\n");
      out.write("\t            },\n");
      out.write("\t            data:[\n");
      out.write("\t                {value: -0.07, label: labelRight},\n");
      out.write("\t                {value: -0.09, label: labelRight},\n");
      out.write("\t                0.2, 0.44,\n");
      out.write("\t                {value: -0.23, label: labelRight},\n");
      out.write("\t                0.08,\n");
      out.write("\t                {value: -0.17, label: labelRight},\n");
      out.write("\t                0.47,\n");
      out.write("\t                {value: -0.36, label: labelRight},\n");
      out.write("\t                0.18\n");
      out.write("\t            ]\n");
      out.write("\t        }\n");
      out.write("\t    ]\n");
      out.write("\t};\n");
      out.write("\tmyChart9.setOption(option);\n");
      out.write("\t\n");
      out.write("\toption = {\n");
      out.write("\t    angleAxis: {\n");
      out.write("\t    },\n");
      out.write("\t    radiusAxis: {\n");
      out.write("\t        type: 'category',\n");
      out.write("\t        data: ['周一', '周二', '周三', '周四'],\n");
      out.write("\t        z: 10\n");
      out.write("\t    },\n");
      out.write("\t    polar: {\n");
      out.write("\t    },\n");
      out.write("\t    series: [{\n");
      out.write("\t        type: 'bar',\n");
      out.write("\t        data: [1, 2, 3, 4],\n");
      out.write("\t        coordinateSystem: 'polar',\n");
      out.write("\t        name: 'A',\n");
      out.write("\t        stack: 'a'\n");
      out.write("\t    }, {\n");
      out.write("\t        type: 'bar',\n");
      out.write("\t        data: [2, 4, 6, 8],\n");
      out.write("\t        coordinateSystem: 'polar',\n");
      out.write("\t        name: 'B',\n");
      out.write("\t        stack: 'a'\n");
      out.write("\t    }, {\n");
      out.write("\t        type: 'bar',\n");
      out.write("\t        data: [1, 2, 3, 4],\n");
      out.write("\t        coordinateSystem: 'polar',\n");
      out.write("\t        name: 'C',\n");
      out.write("\t        stack: 'a'\n");
      out.write("\t    }],\n");
      out.write("\t    legend: {\n");
      out.write("\t        show: true,\n");
      out.write("\t        data: ['A', 'B', 'C']\n");
      out.write("\t    }\n");
      out.write("\t};\n");
      out.write("\n");
      out.write("\tmyChart10.setOption(option);\n");
      out.write("\t\n");
      out.write("\toption = {\n");
      out.write("\t    title: {\n");
      out.write("\t        text: '未来一周气温变化',\n");
      out.write("\t        subtext: '纯属虚构'\n");
      out.write("\t    },\n");
      out.write("\t    tooltip: {\n");
      out.write("\t        trigger: 'axis'\n");
      out.write("\t    },\n");
      out.write("\t    legend: {\n");
      out.write("\t        data:['最高气温','最低气温']\n");
      out.write("\t    },\n");
      out.write("\t    toolbox: {\n");
      out.write("\t        show: true,\n");
      out.write("\t        feature: {\n");
      out.write("\t            dataZoom: {\n");
      out.write("\t                yAxisIndex: 'none'\n");
      out.write("\t            },\n");
      out.write("\t            dataView: {readOnly: false},\n");
      out.write("\t            magicType: {type: ['line', 'bar']},\n");
      out.write("\t            restore: {},\n");
      out.write("\t            saveAsImage: {}\n");
      out.write("\t        }\n");
      out.write("\t    },\n");
      out.write("\t    xAxis:  {\n");
      out.write("\t        type: 'category',\n");
      out.write("\t        boundaryGap: false,\n");
      out.write("\t        data: ['周一','周二','周三','周四','周五','周六','周日']\n");
      out.write("\t    },\n");
      out.write("\t    yAxis: {\n");
      out.write("\t        type: 'value',\n");
      out.write("\t        axisLabel: {\n");
      out.write("\t            formatter: '{value} °C'\n");
      out.write("\t        }\n");
      out.write("\t    },\n");
      out.write("\t    series: [\n");
      out.write("\t        {\n");
      out.write("\t            name:'最高气温',\n");
      out.write("\t            type:'line',\n");
      out.write("\t            data:[11, 11, 15, 13, 12, 13, 10],\n");
      out.write("\t            markPoint: {\n");
      out.write("\t                data: [\n");
      out.write("\t                    {type: 'max', name: '最大值'},\n");
      out.write("\t                    {type: 'min', name: '最小值'}\n");
      out.write("\t                ]\n");
      out.write("\t            },\n");
      out.write("\t            markLine: {\n");
      out.write("\t                data: [\n");
      out.write("\t                    {type: 'average', name: '平均值'}\n");
      out.write("\t                ]\n");
      out.write("\t            }\n");
      out.write("\t        },\n");
      out.write("\t        {\n");
      out.write("\t            name:'最低气温',\n");
      out.write("\t            type:'line',\n");
      out.write("\t            data:[1, -2, 2, 5, 3, 2, 0],\n");
      out.write("\t            markPoint: {\n");
      out.write("\t                data: [\n");
      out.write("\t                    {name: '周最低', value: -2, xAxis: 1, yAxis: -1.5}\n");
      out.write("\t                ]\n");
      out.write("\t            },\n");
      out.write("\t            markLine: {\n");
      out.write("\t                data: [\n");
      out.write("\t                    {type: 'average', name: '平均值'},\n");
      out.write("\t                    [{\n");
      out.write("\t                        symbol: 'none',\n");
      out.write("\t                        x: '90%',\n");
      out.write("\t                        yAxis: 'max'\n");
      out.write("\t                    }, {\n");
      out.write("\t                        symbol: 'circle',\n");
      out.write("\t                        label: {\n");
      out.write("\t                            normal: {\n");
      out.write("\t                                position: 'start',\n");
      out.write("\t                                formatter: '最大值'\n");
      out.write("\t                            }\n");
      out.write("\t                        },\n");
      out.write("\t                        type: 'max',\n");
      out.write("\t                        name: '最高点'\n");
      out.write("\t                    }]\n");
      out.write("\t                ]\n");
      out.write("\t            }\n");
      out.write("\t        }\n");
      out.write("\t    ]\n");
      out.write("\t};\n");
      out.write("\n");
      out.write("\tmyChart11.setOption(option);\n");
      out.write("\t\n");
      out.write("\tfunction clickPrint() {\n");
      out.write("\t\t$(\"div.container-fluid\").printThis({\n");
      out.write("\t      debug: false,               // 显示用于调试的iframe\n");
      out.write("\t      importCSS: true,            // 导入页面CSS \n");
      out.write("\t      importStyle: false,         // 导入样式标签 \n");
      out.write("\t      printContainer: true,       // 抓取外部容器以及选择器的内容 \n");
      out.write("\t      loadCSS: null, \t\t\t  // 路径额外的CSS文件-用于多个阵列[] \n");
      out.write("\t      pageTitle: \"Bootstrap EChartsDemo\",              // 将标题添加到打印页面\n");
      out.write("\t      removeInline: false,        // 从打印元素中删除所有内联样式 \n");
      out.write("\t      printDelay: 333,            // 可变打印延迟; 取决于复杂性，可能需要更高的值 \n");
      out.write("\t      header: null,               // 前缀为html \n");
      out.write("\t      footer: null,               // 后缀为html \n");
      out.write("\t      base: false ,               // 保留BASE标记或接受URL的字符串\n");
      out.write("\t      formValues: true,           // 保留输入/表单值 \n");
      out.write("\t      canvas: true,              // 复制canvas元素（实验性）\n");
      out.write("\t      doctypeString: \"...\",       // 为旧标记 \n");
      out.write("\t      removeScripts: false,       // 从打印内容中删除脚本标记\n");
      out.write("\t      copyTagClasses: false       // 从html＆body标签复制类 \n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
